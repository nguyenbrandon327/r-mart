# ==============================================
# R-MART BACKEND ENVIRONMENT VARIABLES
# ==============================================

# ----------------------------------------
# CORE APPLICATION SETTINGS
# ----------------------------------------
NODE_ENV=production
PORT=3000
CLIENT_URL=https://your-frontend-domain.com

# ----------------------------------------
# SECURITY KEYS (REQUIRED)
# ----------------------------------------
JWT_SECRET=your-super-secret-jwt-key-here
ENCRYPTION_KEY=your-256-bit-encryption-key-here
ARCJET_KEY=your-arcjet-api-key-here

# ----------------------------------------
# DATABASE CONFIGURATION (REQUIRED)
# ----------------------------------------
PGHOST=your-postgres-host
PGDATABASE=your-database-name
PGUSER=your-postgres-username
PGPASSWORD=your-postgres-password

# ----------------------------------------
# AWS S3 CONFIGURATION (REQUIRED)
# ----------------------------------------
AWS_REGION=us-west-1
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_S3_BUCKET_NAME=your-s3-bucket-name

# ----------------------------------------
# ELASTICSEARCH CONFIGURATION (OPTIONAL)
# ----------------------------------------
ELASTICSEARCH_URL=https://your-elasticsearch-url:9200
ELASTICSEARCH_USERNAME=elastic
ELASTICSEARCH_PASSWORD=your-elasticsearch-password
SYNC_ELASTICSEARCH_ON_STARTUP=false

# ----------------------------------------
# EMAIL SERVICE (OPTIONAL)
# ----------------------------------------
MAILTRAP_TOKEN=your-mailtrap-token

# ----------------------------------------
# PRODUCTION NOTES
# ----------------------------------------
# 1. Generate ENCRYPTION_KEY: node scripts/generateEncryptionKey.js
# 2. Generate JWT_SECRET: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
# 3. Set CLIENT_URL to your actual frontend domain
# 4. Ensure all database credentials are correct
# 5. Configure AWS S3 bucket with proper permissions
